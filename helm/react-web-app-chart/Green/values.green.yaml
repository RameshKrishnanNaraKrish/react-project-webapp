# Default values for react-web-app-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  service1_green:
    repository: rameshkrishnannarakrish/reactprojectwebapp_service1green
    pullPolicy: IfNotPresent
    tag: 154
  service2_green:
    repository: rameshkrishnannarakrish/reactprojectwebapp_service2green
    pullPolicy: IfNotPresent
    tag: 154
  frontend_green:
    repository: rameshkrishnannarakrish/reactprojectwebapp_frontendgreen
    pullPolicy: IfNotPresent
    tag: 154

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  frontend_green:
    type: NodePort       # Service type for frontend (ClusterIP, NodePort, LoadBalancer)
    port: 80              # Port on which the frontend service is exposed
    targetPort: 3000      # Port on the frontend container
  service1_green:
    type: ClusterIP       # Service type for service1 (ClusterIP, NodePort, LoadBalancer)
    port: 80              # Port on which the service1 service is exposed
    targetPort: 3001      # Port on the service1 container
  service2_green:
    type: ClusterIP       # Service type for service2 (ClusterIP, NodePort, LoadBalancer)
    port: 80              # Port on which the service2 service is exposed
    targetPort: 3002      # Port on the service2 container

dbCredentialsSecretName: db-credentials-green

ingress:
  enabled: true
  className: nginx
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: greenmyapp.orgramesh.com
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

env:
  API_BASE_URL: http://greenmyapp.orgramesh.com